<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Universal Nutrition Counselor</title>
    <link id="stylesheet" href="/css/stat-styles.css" rel="stylesheet"/>
    <link id="dark-mode-stylesheet"href="/css/dark-mode.css" rel="stylesheet" disabled/>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cedarville+Cursive&family=Lobster&display=swap" rel="stylesheet">  
</head>
<body>
    <nav>
        <a href="/">Home</a>
        <a href="/stat-form">Workout-Tracker</a>
        <a href="/stats">Stats</a>
        <a href="/unc-store">Store</a>
        <select name="toggle" class="toggle-button" id="toggle" onchange="toggleMode()">
            <option value="light">Light Mode</option>
            <option value="dark">Dark Mode</option>
        </select>
    </nav>
    <br/>
    <header>Store</header>
    <div class="shop-items">
        <% items.forEach(item => { %>
            <div class="shop-item">
                <h2><%= item.name %></h2>
                <img src="<%= item.image_url %>" alt="<%= item.name %>">
                <p><%= item.description %></p>
                <p>Category: <%= item.category %></p>
                <p>Price: $<%= (parseFloat(item.price) || 0).toFixed(2) %></p>
                <button id="buy-button">Buy!</button>
            </div>
        <% }); %>
    </div>

    <script>
        document.getElementById('buy-button').addEventListener('click', async () => {
        const id = 'req.body.id'; // Replace with the actual avatar ID
        const name = 'req.body.name'; // Replace with the actual avatar name

        try {
            const response = await fetch('/set_avatar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id, name })
            });

            if (response.ok) {
                const data = await response.json();
                console.log('Avatar updated:', data);
                // Optionally, handle success (e.g., update UI or notify user)
            } else {
                console.error('Error updating avatar:', response.statusText);
            }
        } catch (error) {
            console.error('Fetch error:', error);
        }
    });
    </script>
    <script>
        function toggleMode() {
            const stylesheet = document.getElementById('stylesheet');
            const darkStylesheet = document.getElementById('dark-mode-stylesheet');
            const selectElement = document.getElementById('toggle');

            // Check current mode and switch stylesheets
            if (selectElement.value === "dark") {
                stylesheet.disabled = true; // Disable light mode CSS
                darkStylesheet.disabled = false; // Enable dark mode CSS
                document.body.style.backgroundColor = "gray"; 
                document.querySelector('nav').style.backgroundColor = "tan"; 
                localStorage.setItem('theme', 'dark'); // Save preference in local storage
            } else {
                stylesheet.disabled = false; // Enable light mode CSS
                darkStylesheet.disabled = true; // Disable dark mode CSS
                document.body.style.backgroundColor = "rgb(243, 187, 190)"; 
                document.querySelector('nav').style.backgroundColor = "rgb(245, 233, 209)"; 
                localStorage.setItem('theme', 'light'); // Save preference in local storage
            }
        }

        // On page load, check local storage for theme preference
        window.onload = function() {
            const savedTheme = localStorage.getItem('theme');
            const selectElement = document.getElementById('toggle');

            if (savedTheme === 'dark') {
                selectElement.value = 'dark'; // Set dropdown to dark mode
                toggleMode(); // Apply dark mode styles
            } else {
                selectElement.value = 'light'; // Set dropdown to light mode
                toggleMode(); // Apply light mode styles
            }
        }
    </script>
    
</body>
</html>
